name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint

  unit-test:
    needs: lint
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run unit tests with coverage
        run: npm run test:coverage
      
      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  e2e-test:
    needs: lint
    name: E2E Tests
    runs-on: ubuntu-latest
    environment: integration
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install chromium
      
      - name: Run E2E tests
        run: npm run test:e2e
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 7

  status-comment:
    needs: [unit-test, e2e-test]
    name: PR Status Comment
    runs-on: ubuntu-latest
    if: always()
    permissions:
      pull-requests: write
    
    steps:
      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage
      
      - name: Download Playwright report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
      
      - name: Create Status Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let status = '✅ All checks have passed!';
            if ('${{ needs.unit-test.result }}' !== 'success' || '${{ needs.e2e-test.result }}' !== 'success') {
              status = '❌ Some checks have failed!';
            }
            
            // Read coverage summary if exists
            let coverageInfo = '';
            try {
              const summary = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
              coverageInfo = `
              ### Coverage Summary
              - Statements: ${summary.total.statements.pct}%
              - Functions: ${summary.total.functions.pct}%
              - Lines: ${summary.total.lines.pct}%
              `;
            } catch (e) {
              coverageInfo = '\n⚠️ Coverage information not available';
            }
            
            const comment = `## PR Check Results
            ${status}
            
            ${coverageInfo}
            
            [View detailed test report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
